{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul\\\\.vscode\\\\rice-SOEN341_Project_F24\\\\rice-SOEN341_Project_F24\\\\Sprint_1\\\\my-app\\\\client\\\\src\\\\app\\\\components\\\\InstructorManageClasses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar'; // Import Sidebar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructorManageClasses = () => {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [newClassName, setNewClassName] = useState('');\n  const [message, setMessage] = useState('');\n\n  // Fetch current classes from the backend when the component mounts\n  useEffect(() => {\n    const fetchClasses = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/instructorManageClasses', {\n          withCredentials: true\n        });\n        setClasses(response.data.classes);\n        if (response.data.classes.length === 0) {\n          setMessage('No classes are available (None added).');\n        } else {\n          setMessage(''); // Clear the message if there are classes\n        }\n      } catch (error) {\n        console.error('Error fetching classes:', error);\n\n        // Check if the response contains status information\n        if (error.response) {\n          console.error('Server responded with status:', error.response.status);\n          console.error('Response data:', error.response.data);\n          setMessage(`Error: ${error.response.data.message || 'Failed to fetch classes.'}`);\n        } else if (error.request) {\n          console.error('No response received:', error.request);\n          setMessage('No response from server. Check if the server is running.');\n        } else {\n          console.error('Error setting up request:', error.message);\n          setMessage('Error setting up the request.');\n        }\n      }\n    };\n    fetchClasses();\n  }, []);\n\n  // Handle file selection for the new class roster\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Upload the CSV file to create a new class\n  const handleUpload = async () => {\n    if (!selectedFile || !newClassName.trim()) {\n      setMessage('Please provide a class name and select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('roster', selectedFile);\n    formData.append('className', newClassName.trim());\n    try {\n      const response = await axios.post('http://localhost:3000/upload-roster', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        withCredentials: true\n      });\n      setMessage(response.data.message);\n      // Refresh the classes list\n      setClasses([...classes, {\n        name: newClassName.trim(),\n        studentCount: response.data.studentCount,\n        groupCount: response.data.groupCount\n      }]);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to upload roster');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-classes-container\",\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      style: {\n        padding: '20px',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Classes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), classes.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: classes.map((classItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: classItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), \" - \", classItem.studentCount, \" Students, \", classItem.groupCount, \" Groups\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this) // Display the message if there are no classes\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          borderTop: '1px solid #ccc',\n          paddingTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a New Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Class Name\",\n          value: newClassName,\n          onChange: e => setNewClassName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          children: \"Upload Roster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(InstructorManageClasses, \"FQXViFS3jJJOVgZDcIGOoor9d0k=\");\n_c = InstructorManageClasses;\nexport default InstructorManageClasses;\nvar _c;\n$RefreshReg$(_c, \"InstructorManageClasses\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","jsxDEV","_jsxDEV","InstructorManageClasses","_s","classes","setClasses","selectedFile","setSelectedFile","newClassName","setNewClassName","message","setMessage","fetchClasses","response","get","withCredentials","data","length","error","console","status","request","handleFileChange","event","target","files","handleUpload","trim","formData","FormData","append","post","headers","name","studentCount","groupCount","_error$response","_error$response$data","className","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","flex","map","classItem","index","marginTop","borderTop","paddingTop","type","placeholder","value","onChange","e","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/abdul/.vscode/rice-SOEN341_Project_F24/rice-SOEN341_Project_F24/Sprint_1/my-app/client/src/app/components/InstructorManageClasses.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar'; // Import Sidebar\r\n\r\nconst InstructorManageClasses = () => {\r\n    const [classes, setClasses] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [newClassName, setNewClassName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Fetch current classes from the backend when the component mounts\r\n    useEffect(() => {\r\n        const fetchClasses = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3000/instructorManageClasses', {\r\n                    withCredentials: true,\r\n                });\r\n                setClasses(response.data.classes);\r\n                if (response.data.classes.length === 0) {\r\n                    setMessage('No classes are available (None added).');\r\n                } else {\r\n                    setMessage(''); // Clear the message if there are classes\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching classes:', error);\r\n    \r\n                // Check if the response contains status information\r\n                if (error.response) {\r\n                    console.error('Server responded with status:', error.response.status);\r\n                    console.error('Response data:', error.response.data);\r\n                    setMessage(`Error: ${error.response.data.message || 'Failed to fetch classes.'}`);\r\n                } else if (error.request) {\r\n                    console.error('No response received:', error.request);\r\n                    setMessage('No response from server. Check if the server is running.');\r\n                } else {\r\n                    console.error('Error setting up request:', error.message);\r\n                    setMessage('Error setting up the request.');\r\n                }\r\n            }\r\n        };\r\n    \r\n        fetchClasses();\r\n    }, []);\r\n\r\n    // Handle file selection for the new class roster\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    // Upload the CSV file to create a new class\r\n    const handleUpload = async () => {\r\n        if (!selectedFile || !newClassName.trim()) {\r\n            setMessage('Please provide a class name and select a file.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('roster', selectedFile);\r\n        formData.append('className', newClassName.trim());\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/upload-roster', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n                withCredentials: true,\r\n            });\r\n\r\n            setMessage(response.data.message);\r\n            // Refresh the classes list\r\n            setClasses([...classes, { name: newClassName.trim(), studentCount: response.data.studentCount, groupCount: response.data.groupCount }]);\r\n        } catch (error) {\r\n            setMessage(error.response?.data?.message || 'Failed to upload roster');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"manage-classes-container\" style={{ display: 'flex' }}>\r\n            <Sidebar /> {/* Include Sidebar component */}\r\n            <div className=\"content\" style={{ padding: '20px', flex: 1 }}>\r\n                <h2>Manage Classes</h2>\r\n                {/* Display current classes */}\r\n                <div>\r\n                    <h3>Current Classes</h3>\r\n                    {classes.length > 0 ? (\r\n                        <ul>\r\n                            {classes.map((classItem, index) => (\r\n                                <li key={index}>\r\n                                    <strong>{classItem.name}</strong> - {classItem.studentCount} Students, {classItem.groupCount} Groups\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>{message}</p> // Display the message if there are no classes\r\n                    )}\r\n                </div>\r\n\r\n                {/* File upload section */}\r\n                <div style={{ marginTop: '20px', borderTop: '1px solid #ccc', paddingTop: '10px' }}>\r\n                    <h3>Add a New Class</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Class Name\"\r\n                        value={newClassName}\r\n                        onChange={(e) => setNewClassName(e.target.value)}\r\n                    />\r\n                    <br />\r\n                    <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n                    <button onClick={handleUpload}>Upload Roster</button>\r\n                    {message && <p>{message}</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InstructorManageClasses;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}